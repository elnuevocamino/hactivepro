export function initialize(){const e=document.getElementById("addAttributeBtn"),t=document.getElementById("attributesContainer"),n=document.getElementById("attributeRowTemplate");if(!e||!t||!n)return void console.error("Elementos para el generador de entidades no encontrados.");const o=()=>{const e=n.content.cloneNode(!0);t.appendChild(e)};e.addEventListener("click",o),t.addEventListener("click",e=>{e.target.classList.contains("remove-field-btn")&&e.target.closest(".field-row").remove()}),o(),o()}export function generate(e){const t=t=>e.querySelector(`#${t}`)?.value.trim()||"";let n="Actúa como un arquitecto de software senior. Genera una definición de clase/entidad de datos robusta y bien estructurada.\n\n";n+="**Especificaciones:**\n",n+=`- Nombre de la Entidad: ${t("entityName")}\n`,n+=`- Lenguaje: ${t("entityLang")}\n\n`,n+="**Atributos:**\n";e.querySelectorAll(".field-row").forEach(e=>{const t=e.querySelector(".attribute-name").value,o=e.querySelector(".attribute-type").value;t&&o&&(n+=`- ${t}: ${o}\n`)});const o=(a="entityOptions",Array.from(e.querySelectorAll(`input[name="${a}"]:checked`)).map(e=>e.value));var a;o.length>0&&(n+="\n**Opciones Adicionales:**\n",o.forEach(e=>{n+=`- Incluir ${e}.\n`}));const r=t("additionalComments");return r&&(n+=`\n**Comentarios Adicionales:**\n${r}\n`),n+="\nEl código final debe seguir las mejores prácticas y convenciones del lenguaje especificado. Debe estar completamente documentado (ej: Javadoc, TSDoc) y listo para ser integrado en un proyecto.",n}